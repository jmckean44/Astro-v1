---
import Layout from '../layouts/Layout.astro';
const obj = {
	listItems: ['first item', 'seconds item', 'third item'],
};
const response = await fetch('https://jsonplaceholder.typicode.com/posts?_limit=5');
const data = await response.json();
---

<Layout>
	<div class="container top">
		<div class="flex">
			<h1>Flex</h1>
		</div>
		<div class="flex">
			<div>
				Images in the public folder, as well as remote images not specifically configured in your project, can also be used with the Image component, but will not be processed. can transform a local
				or authorized remote image’s dimensions, file type, and quality for control over your displayed image. The resulting tag includes alt, loading, and decoding attributes and infers image
				dimensions to avoid Cumulative Layout Shift.
			</div>
			<div>
				<ul>
					{obj.listItems.map((item) => <li>{item}</li>)}
				</ul>
				<ul>
					{data.map((item) => <li>{item.title}</li>)}
				</ul>
			</div>

			<div>Images in the public folder, as well as remote images not specifically configured in your project, can also be used with the Image component, but will not be processed.</div>
		</div>
	</div>
	<div class="container top bottom">
		<div class="flex">
			<h1>Grid</h1>
		</div>
		<div class="grid">
			<div>
				<p>
					Images in the public folder, as well as remote images not specifically configured in your project, can also be used with the Image component, but will not be processed. can transform a local
					or authorized remote image’s dimensions, file type, and quality for control over your displayed image. The resulting tag includes alt, loading, and decoding attributes and infers image
					dimensions to avoid Cumulative Layout Shift.
				</p>
			</div>
			<div>
				<p>
					Images in the public folder, as well as remote images not specifically configured in your project, can also be used with the Image component, but will not be processed. can transform a local
					or authorized remote image’s dimensions, file type, and quality for control over your displayed image.
				</p>
			</div>
			<div>
				<p>
					Images in the public folder, as well as remote images not specifically configured in your project, can also be used with the Image component, but will not be processed. can transform a local
					or authorized remote image’s dimensions, file type, and quality for control over your displayed image. The resulting tag includes alt, loading, and decoding attributes and infers image
					dimensions to avoid Cumulative Layout Shift.
				</p>
			</div>
		</div>
	</div>
</Layout>

<style is:global>
	.flex > div {
		flex: 1;
	}
	.grid {
		grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
	}
</style>
